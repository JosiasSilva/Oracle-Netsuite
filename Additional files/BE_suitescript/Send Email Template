/**
 * Module Description
 * 
 * Version    Date            Author           Remarks
 * 1.00       28 Feb 2019     kanhu.panigrahi
 *
 */

/**
 * The recordType (internal id) corresponds to the "Applied To" record in your script deployment. 
 * @appliedtorecord recordType
 * 
 * @param {String} type Operation types: create, edit, delete, xedit,
 *                      approve, cancel, reject (SO, ER, Time Bill, PO & RMA only)
 *                      pack, ship (IF only)
 *                      dropship, specialorder, orderitems (PO only) 
 *                      paybills (vendor payments)
 * @returns {Void}
 */
function userEventAfterSubmit(type){
	try {
		  var emailTempID = 1211;//Appointment Cancellation Email - Auto Send
		  var customerId = nlapiGetRecordId();
		  var customerMail = nlapiGetFieldValue('email');
		  var emailTemp=nlapiLoadRecord('emailtemplate',emailTempID); 
		  nlapiLogExecution( 'DEBUG', 'Inside userEventAfterSubmit','customerId ='+customerId+'/customerMail ='+customerMail);
		  
			var emailSubj=emailTemp.getFieldValue('subject');
			var emailBody=emailTemp.getFieldValue('content');
			var customerobj = nlapiLoadRecord('customer', customerId);
			var newAppointment= nlapiLoadRecord('calendarevent',24021579);
			var renderer=nlapiCreateTemplateRenderer();
			renderer.addRecord('customer',customerobj);
			renderer.addRecord('entity',newAppointment);
			renderer.setTemplate(emailBody);
			renderBody=renderer.renderToString();
			bodyMsg = renderBody;
			nlapiSendEmail(20561, 21886172, "Your Brilliant Earth Appointment Request", bodyMsg,null,"eito@brilliantearth.com", null ,null,null);
			nlapiLogExecution( 'DEBUG', 'Inside userEventAfterSubmit','customerMail ='+customerMail);	  
	} catch (e) {
		// TODO: handle exception
		nlapiLogExecution('ERROR', 'Inside userEventAfterSubmit', 'e ='+e);
	}
  
}
